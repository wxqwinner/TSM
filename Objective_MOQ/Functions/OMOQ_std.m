function [ OMOV, OMOV_name ] = OMOQ_std( ref, test, side_data, match_method )
%UNTITLED3 Summary of this function goes here
%   Detailed explanation goes here
global debug_var

TSM = side_data.TSM;
MeanOS = side_data.MeanOS;
MedianOS = side_data.MedianOS;
% StdOS = side_data.StdOS;
MeanOS_RAW = side_data.MeanOS_RAW;
MedianOS_RAW = side_data.MedianOS_RAW;
% StdOS_RAW = side_data.StdOS_RAW;

[sig_ref, ref_fs] = audioread(ref);
[sig_test, General.fs] = audioread(test);
if ref_fs~=44100
    %Resample
    sig_ref = resample(sig_ref,44100,ref_fs);
end
if General.fs~=44100
    %Resample
    sig_test = resample(sig_test,44100,General.fs);
    General.fs = 44100;
end
General.version = 'basic';
General.model = 'FFT';
General.N = 2048;
General.BasicStepSize = 1024;
General.AdvancedStepSize = 192;
General.TSM = TSM;
General.Testname = test;

%Prepare the signal
[sig_ref, sig_test, General] = Signal_Prep(sig_ref, sig_test, General);

% %Additional TSM Features
[Ph_NW, Ph_MW] = Phasiness4(sig_ref, sig_test, General);
[SS_MAD, SS_MD] = Spec_Sim(sig_ref, sig_test);
[peak_delta, transient_ratio, hpsep_transient_ratio] = Transientness(sig_ref, sig_test, General);
% [es,et,en] = Fuzzy_Feat(sig_ref ,sig_test, General);


%PEAQ Implementation
%Basic and Advanced have been implemented
% Ear Model
if (exist('Ear.mat', 'file') == 2 && debug_var)
    disp('Using Previously Generated Ear Model file');
    load('Ear.mat')
else
    [ Ref_Model_FB, Test_Model_FB ] = fb_Ear_Model(sig_ref, sig_test, General, match_method);
    [ Ref_Model ] = fft_Ear_Model( sig_ref, General, match_method, 'ref');
    [ Test_Model ] = fft_Ear_Model( sig_test, General, match_method, 'test');
%     fprintf('Ref frames = %d, Test frames = %d\n',size(Ref_Model.X_MAG,2),size(Test_Model.X_MAG,2));
    if debug_var
        save('Ear.mat','Ref_Model','Test_Model','Ref_Model_FB','Test_Model_FB','General')%, 'Ref_Model_FB');
    end
end

%Pre-Processing of excitation patterns
if (exist('Pre-pro.mat', 'file') == 2 && debug_var)
    disp('Using Previously Generated Pre-Processing file');
    load('Pre-pro.mat')
else
    [FB_Ref_Prepro, FB_Test_Prepro] = fb_pre_pro( Ref_Model_FB, Test_Model_FB, General );
    [Ref_Prepro, Test_Prepro] = fft_pre_pro( Ref_Model, Test_Model, General);
    
    if debug_var
        save('Pre-pro.mat', 'Ref_Prepro', 'Test_Prepro', 'FB_Ref_Prepro', 'FB_Test_Prepro');
    end
end


%Calculation of Model Output Variables
MOV = MOV_Calc( Ref_Model, Test_Model, Ref_Prepro, Test_Prepro, Ref_Model_FB, Test_Model_FB, FB_Ref_Prepro, FB_Test_Prepro, General );

%Additional Measures of Quality
%Previous Objective Measures
MOV.DM = DM_Calc( Ref_Model, Test_Model);
MOV.SER = SER_Calc( Ref_Model, Test_Model);

%Transient Features
MOV.peak_delta = peak_delta;
MOV.transient_ratio = transient_ratio;
MOV.hpsep_transient_ratio = hpsep_transient_ratio;

%Phasiness Features
MOV.ave_P_ave_f = Ph_NW.ave_P_ave_f;
MOV.std_P_ave_f = Ph_NW.std_P_ave_f; 
MOV.ave_P_ave_f_mag = Ph_MW.ave_P_ave_f_mag;
MOV.std_P_ave_f_mag = Ph_MW.std_P_ave_f_mag; 

% Spectral Similarity Feature
MOV.SS_MAD = SS_MAD.ave;
MOV.SS_MD = SS_MD.ave;
MOV.SS_MAD_STDEV = SS_MAD.stdev;
MOV.SS_MD_STDEV = SS_MD.stdev;


% % %Objective Paper selection of output features
% OMOV = [MeanOS, MedianOS, ...
%     MeanOS_RAW, MedianOS_RAW, ...
%     TSM, ...
%     MOV.WinModDiff1B, MOV.AvgModDiff1B, MOV.AvgModDiff2B, ...
%     MOV.RmsNoiseLoudB, ...
%     MOV.BandwidthRefB, MOV.BandwidthTestB, MOV.BandwidthTestB_new, ...
%     MOV.TotalNMRB, ...
%     MOV.RelDistFramesB, ...
%     MOV.MFPDB, MOV.ADBB, ...
%     MOV.EHSB, ...
%     MOV.RmsModDiffA, MOV.RmsNoiseLoudAsymA, MOV.AvgLinDistA, MOV.SegmentalNMRB, ...
%     MOV.DM, MOV.SER, ...
%     MOV.peak_delta, MOV.transient_ratio, MOV.hpsep_transient_ratio, ...
%     MOV.ave_P_ave_f, MOV.std_P_ave_f, ...
%     MOV.ave_P_ave_f_mag, MOV.std_P_ave_f_mag, ...
%     MOV.SS_MAD, MOV.SS_MD];
% 
% 
% OMOV_name = {'MeanOS', 'MedianOS', ...
%     'MeanOS_RAW', 'MedianOS_RAW', ...
%     'TSM', ...
%     'WinModDiff1B', 'AvgModDiff1B', 'AvgModDiff2B', ...
%     'RmsNoiseLoudB', ...
%     'BandwidthRefB', 'BandwidthTestB', 'BandwidthTestB_new', ...
%     'TotalNMRB', ...
%     'RelDistFramesB', ...
%     'MFPDB', 'ADBB', ...
%     'EHSB', ...
%     'RmsModDiffA', 'RmsNoiseLoudAsymA', 'AvgLinDistA', 'SegmentalNMRB', ...
%     'DM', 'SER', ...
%     'peak_delta', 'transient_ratio', 'hpsep_transient_ratio', ...
%     'MPhNW', 'SPhNW', ...
%     'MPhMW', 'SPhMW', ...
%     'SS_MAD','SS_MD'};

% %Objective Paper selection of output features
OMOV = [MeanOS, MedianOS, ...
    MeanOS_RAW, MedianOS_RAW, ...
    TSM, ...
    MOV.WinModDiff1B, MOV.AvgModDiff1B, MOV.AvgModDiff2B, ...
    MOV.RmsNoiseLoudB, ...
    MOV.BandwidthRefB, MOV.BandwidthTestB, MOV.BandwidthTestB_new, ...
    MOV.TotalNMRB, ...
    MOV.RelDistFramesB, ...
    MOV.MFPDB, MOV.ADBB, ...
    MOV.EHSB, ...
    MOV.RmsModDiffA, MOV.RmsNoiseLoudAsymA, MOV.AvgLinDistA, MOV.SegmentalNMRB, ...
    MOV.DM, MOV.SER, ...
    MOV.peak_delta, MOV.transient_ratio, MOV.hpsep_transient_ratio, ...
    MOV.ave_P_ave_f, MOV.std_P_ave_f, ...
    MOV.ave_P_ave_f_mag, MOV.std_P_ave_f_mag, ...
    MOV.SS_MAD, MOV.SS_MD, ...
    MOV.WinModDiff1B_STDEV, MOV.AvgModDiff1B_STDEV, MOV.AvgModDiff2B_STDEV, ...
    MOV.RmsNoiseLoudB_STDEV, ...
    MOV.BandwidthRefB_STDEV, MOV.BandwidthTestB_STDEV, MOV.BandwidthTestB_new_STDEV, ...
    MOV.TotalNMRB_STDEV, ...
    MOV.RelDistFramesB_STDEV, ...
    MOV.ADBB_STDEV, ...
    MOV.EHSB_STDEV, ...
    MOV.RmsNoiseLoudA, MOV.RmsNoiseLoudA_STDEV, MOV.RmsMissingComponentsA, MOV.RmsMissingComponentsA_STDEV, ...
    MOV.RmsModDiffA_STDEV, MOV.AvgLinDistA_STDEV, MOV.SegmentalNMRB_STDEV, ...
    MOV.SS_MAD_STDEV, MOV.SS_MD_STDEV];


OMOV_name = {'MeanOS', 'MedianOS', ...
    'MeanOS_RAW', 'MedianOS_RAW', ...
    'TSM', ...
    'WinModDiff1B', 'AvgModDiff1B', 'AvgModDiff2B', ...
    'RmsNoiseLoudB', ...
    'BandwidthRefB', 'BandwidthTestB', 'BandwidthTestB_new', ...
    'TotalNMRB', ...
    'RelDistFramesB', ...
    'MFPDB', 'ADBB', ...
    'EHSB', ...
    'RmsModDiffA', 'RmsNoiseLoudAsymA', 'AvgLinDistA', 'SegmentalNMRB', ...
    'DM', 'SER', ...
    'peak_delta', 'transient_ratio', 'hpsep_transient_ratio', ...
    'MPhNW', 'SPhNW', ...
    'MPhMW', 'SPhMW', ...
    'SS_MAD','SS_MD', ...
    'WinModDiff1B_STDEV', 'AvgModDiff1B_STDEV', 'AvgModDiff2B_STDEV', ...
    'RmsNoiseLoudB_STDEV', ...
    'BandwidthRefB_STDEV', 'BandwidthTestB_STDEV', 'BandwidthTestB_new_STDEV', ...
    'TotalNMRB_STDEV', ...
    'RelDistFramesB_STDEV', ...
    'ADBB_STDEV', ...
    'EHSB_STDEV', ...
    'RmsNoiseLoudA', 'RmsNoiseLoudA_STDEV', 'RmsMissingComponentsA', 'RmsMissingComponentsA_STDEV', ...
    'RmsModDiffA_STDEV', 'AvgLinDistA_STDEV', 'SegmentalNMRB_STDEV', ...
    'SS_MAD_STDEV','SS_MD_STDEV'};

% % Save the MOV values for current file
f = split(test,'/');
fname = char(f(end));
fname = fname(1:end-4);
output_name = ['Features/' match_method '/' fname '.mat'];
save(output_name, 'OMOV');

end

